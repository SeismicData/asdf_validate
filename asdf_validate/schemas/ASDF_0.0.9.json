{
  "$schema": "http://json-schema.org/draft-04/schema#",

  "type": "object",

  "definitions": {

    "scalar_data_space": {
      "type": "object",
      "description": "A scalar dataspace",
      "required": ["ScalarDataspace"],
      "properties": {
        "ScalarDataspace": {
          "type": "null"
        }
      }
    },

    "simple_1d_dataspace": {
      "type": "object",
      "description": "A simple one dimensional dataspace.",
      "required": ["SimpleDataspace"],
      "properties": {
        "SimpleDataspace": {
          "type": "object",
          "required": ["@Ndims", "Dimension"],
          "properties": {
            "@Ndims": {
              "type": "integer"},
            "Dimension": {
              "type": "object",
              "required": ["@MaxDimSize"],
              "properties": {
                "@MaxDimSize": {
                  "type": "string",
                  "enum": ["UNLIMITED"]
                }
              }
            }
          }
        }
      }
    },

    "byte_array_data_type": {
      "type": "object",
      "description": "Byte array data type used for XML documents in ASDF.",
      "required": ["IntegerType"],
      "properties": {
        "IntegerType": {
          "type": "object",
          "required": ["@ByteOrder", "@Sign", "@Size"],
          "properties": {
            "@ByteOrder": {
              "type": "string",
              "enum": ["LE", "BE"]},
            "@Sign": {
              "type": "boolean"
            },
            "@Size": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1
            }
          }
        }
      }
    },

    "xml_dataset_type": {
      "type": "object",
      "description": "The dataset type used for XML strings within ASDF.",
      "required": ["Dataspace", "DataType"],
      "properties": {
        "Dataspace": {"$ref": "#/definitions/simple_1d_dataspace"},
        "DataType": {"$ref": "#/definitions/byte_array_data_type"}
      }
    },

    "string_attribute_data_type": {
      "type": "object",
      "description": "The datatype of string attributes.",
      "properties": {
        "StringType": {
          "type": "object",
          "required": ["@Cset", "@StrSize", "@StrPad"],
          "properties": {
            "@Cset": {
              "type": "string",
              "description": "Force ASCII Strings.",
              "enum": ["H5T_CSET_ASCII"]
            },
            "@StrSize": {
              "type": "integer",
              "minimum": 1
            },
            "@StrPad": {
              "type": "string",
              "description": "Force zero padding.",
              "enum": ["H5T_STR_NULLPAD"]
            }
          }
        }
      }
    },

    "string_attribute": {
      "type": "object",
      "description": "ASDF string attribute including data space and type.",
      "properties": {
        "Dataspace": {"$ref": "#/definitions/scalar_data_space"},
        "DataType": {"$ref": "#/definitions/string_attribute_data_type"}
      }
    },

    "64bit_signed_int_type": {
      "type": "object",
      "required": ["IntegerType"],
      "properties": {
        "IntegerType": {
          "type": "object",
          "required": ["@ByteOrder", "@Sign", "@Size"],
          "properties": {
            "@ByteOrder": {
              "type": "string",
              "enum": ["LE", "BE"]
            },
            "@Sign": {
              "type": "boolean",
              "enum": [true]
            },
            "@Size": {
              "type": "integer",
              "minimum": 8,
              "maximum": 8
            }
          }
        }
      }
    },

    "any_signed_integer": {
      "type": "object",
      "required": ["IntegerType"],
      "properties": {
        "IntegerType": {
          "type": "object",
          "required": ["@ByteOrder", "@Sign", "@Size"],
          "properties": {
            "@ByteOrder": {
              "type": "string",
              "enum": ["LE", "BE"]
            },
            "@Sign": {
              "type": "boolean",
              "enum": [true]
            },
            "@Size": {
              "type": "integer",
              "multipleOf": 4,
              "minimum": 4,
              "maximum": 8
            }
          }
        }
      }
    },

    "32bit_float_data_type": {
      "type": "object",
      "required": ["FloatType"],
      "properties": {
        "FloatType": {
          "type": "object",
          "required": ["@ByteOrder", "@Size", "@SignBitLocation", "@ExponentBits", "@ExponentLocation", "@MantissaBits", "@MantissaLocation"],
          "properties": {
            "@ByteOrder": {
              "type": "string",
              "enum": ["LE", "BE"]
            },
            "@Size": {
              "type": "integer",
              "minimum": 4,
              "maximum": 4
            },
            "@SignBitLocation": {
              "type": "integer",
              "minimum": 31,
              "maximum": 31
            },
            "@ExponentBits": {
              "type": "integer",
              "minimum": 8,
              "maximum": 8
            },
            "@ExponentLocation": {
              "type": "integer",
              "minimum": 23,
              "maximum": 23
            },
            "@MantissaBits": {
              "type": "integer",
              "minimum": 23,
              "maximum": 23
            },
            "@MantissaLocation": {
              "type": "integer",
              "minimum": 0,
              "maximum": 0
            }
          }
        }
      }
    },

    "64bit_float_data_type": {
      "type": "object",
      "required": ["FloatType"],
      "properties": {
        "FloatType": {
          "type": "object",
          "required": ["@ByteOrder", "@Size", "@SignBitLocation", "@ExponentBits", "@ExponentLocation", "@MantissaBits", "@MantissaLocation"],
          "properties": {
            "@ByteOrder": {
              "type": "string",
              "enum": ["LE", "BE"]
            },
            "@Size": {
              "type": "integer",
              "minimum": 8,
              "maximum": 8
            },
            "@SignBitLocation": {
              "type": "integer",
              "minimum": 63,
              "maximum": 63
            },
            "@ExponentBits": {
              "type": "integer",
              "minimum": 11,
              "maximum": 11
            },
            "@ExponentLocation": {
              "type": "integer",
              "minimum": 52,
              "maximum": 52
            },
            "@MantissaBits": {
              "type": "integer",
              "minimum": 52,
              "maximum": 52
            },
            "@MantissaLocation": {
              "type": "integer",
              "minimum": 0,
              "maximum": 0
            }
          }
        }
      }
    }

  },

  "required": ["attributes"],

  "properties": {
    "groups": {
      "type": "object",
      "properties": {
        "AuxiliaryData": {
          "type": "object",
          "properties": {
            "groups": {
              "type": "object",
              "description": "The type of auxiliary data. Must be camel case.",
              "additionalProperties": false,
              "patternProperties": {
                "^[A-Z][A-Za-z0-9]*$": {
                  "type": "object",
                  "properties": {
                    "datasets": {
                      "type": "object",
                      "additionalProperties": false,
                      "description": "Tag tag of that particular piece of auxiliary data with the given type. Must be snake case.",
                      "patternProperties": {
                        "^[a-z0-9][a-z0-9_]*[a-z0-9]$": {
                          "type": "object",
                          "description": "This is really free-style and dependent on the application"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "Waveforms": {
          "type": "object",
          "properties": {
            "groups": {
              "type": "object",
              "additionalProperties": false,
              "description": "Waveform groups. Allowed are only 'NET.STA' codes according to the SEED standard.",
              "patternProperties": {
                "^[A-Z0-9]{1,2}\\.[A-Z0-9]{1,5}$": {
                  "type": "object",
                  "properties": {
                    "datasets": {
                      "type": "object",
                      "additionalProperties": false,
                      "patternProperties": {
                        "^[A-Z0-9]{1,2}\\.[A-Z0-9]{1,5}\\.[A-Z0-9]{0,2}\\.[A-Z0-9]{3}__(18|19|20|21)\\d{2}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([0-1][0-9]|2[0-4]):([0-5]\\d|60):[0-5]\\d__(18|19|20|21)\\d{2}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([0-1][0-9]|2[0-4]):([0-5]\\d|60):[0-5]\\d__[a-z_0-9]+$": {
                          "type": "object",
                          "required": ["Dataspace", "DataType"],
                          "properties": {
                            "Dataspace": {"$ref": "#/definitions/simple_1d_dataspace"},
                            "DataType": {
                              "oneOf": [
                                {"$ref": "#/definitions/any_signed_integer"},
                                {"$ref": "#/definitions/32bit_float_data_type"},
                                {"$ref": "#/definitions/64bit_float_data_type"}
                              ]
                            },
                            "attributes": {
                              "type": "object",
                              "required": ["starttime", "sampling_rate"],
                              "properties": {
                                "event_id": {"$ref": "#/definitions/string_attribute"},
                                "focal_mechanism_id": {"$ref": "#/definitions/string_attribute"},
                                "magnitude_id": {"$ref": "#/definitions/string_attribute"},
                                "origin_id": {"$ref": "#/definitions/string_attribute"},
                                "sampling_rate": {
                                  "type": "object",
                                  "description": "Double precision sampling rate",
                                  "properties": {
                                    "Dataspace": {"$ref": "#/definitions/scalar_data_space"},
                                    "DataType": {"$ref": "#/definitions/64bit_float_data_type"}
                                  }
                                },
                                "starttime": {
                                  "type": "object",
                                  "description": "Epoch time in nanoseconds as a double precision integer.",
                                  "properties": {
                                    "Dataspace": {"$ref": "#/definitions/scalar_data_space"},
                                    "DataType": {"$ref": "#/definitions/64bit_signed_int_type"}
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "properties": {
                        "StationXML": {"$ref": "#/definitions/xml_dataset_type"}
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "Provenance": {
          "type": "object",
          "properties": {}
        }
      }
    },
    "datasets": {
      "type": "object",
      "required": ["QuakeML"],
      "properties": {
        "QuakeML": {"$ref": "#/definitions/xml_dataset_type"}
      }
    },
    "attributes": {
      "type": "object",
      "required": ["file_format_version", "file_format"],
      "properties": {
        "file_format_version": {"$ref": "#/definitions/string_attribute"},
        "file_format": {"$ref": "#/definitions/string_attribute"}
      }
    }
  }
}
